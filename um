#!/bin/bash

# path to the manual entries
DATA="$HOME/.local/share/um/"

# variables
flag=1
print_entry=0

# usage function
usage() {
  printf "\033[1mUsage:\033[0m\n"
  printf "\tum (<entry>|<command>)\n"
  printf "\033[1mCommands:\033[0m\n"
  printf "\tlist\n"
  printf "\thelp, --help\n"
}

# handle flags
check_flag() {
  # print flag: -p | --print
  if [ "$1" = "-p" ] || [ "$1" = "--print" ]; then
    print_entry=1
    return
  fi

  echo "Unknown flag '$1'"
  exit 1
}


# Check if any arguments are passed
if [ "$#" -eq 0 ]; then
    echo "Missing argument."
    usage
    exit 1
fi


# check if first the entry is a command
entry="$1"
if [ "$entry" = "list" ]; then
  ls -1 "$DATA" | sed 's/\.man$//'
  exit 0
fi
# help or --help
if [ "$entry" = "help" ] || [ "$entry" = "--help" ]; then
  printf "\033[1mUser Manual\033[0m - a crisper, customized version of man.\n\n"
  usage
  printf "\nConfigured directory for manual entries: $DATA\n"
  exit 0
fi


# parse the entry: check for flags at the beginning, concatenate subsequent arguments
for arg in "$@"; do
  # check flags
  if [ "$flag" -eq 1 ]; then
    if [ "${arg:0:1}" == "-" ]; then
      check_flag "$arg"
      continue
    else
      flag=0
      entry="$arg"
      continue
    fi
  fi

  # we do not expect any flags here
  if [ "${arg:0:1}" == "-" ]; then
    echo "Unexpected flag '$arg'."
    exit 1
  fi

  # concatenate arguments separated by a hyphen
  entry="${entry}-$arg"
done


# print text file if requested (and if it exists)
if [ "$print_entry" -eq 1 ]; then
  file="${entry}.txt"
  if [ -f "$DATA$file" ]; then
    echo -e `cat "$DATA$file"`
    exit 0
  else
    echo "No printable entry found for '$entry'."
    usage
    exit 1
  fi
fi

# else, show manual entry (if it exists)
file="${entry}.man"
if [ -f "$DATA$file" ]; then
    man -l "$DATA$file"
else
  echo "No manual entry found for '$entry'."
  usage
  exit 1
fi
